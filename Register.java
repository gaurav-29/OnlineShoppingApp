package com.android_batch_31.designdemo;

import androidx.appcompat.app.AppCompatActivity;
import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;
import butterknife.Optional;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

import com.android.volley.AuthFailureError;
import com.android.volley.DefaultRetryPolicy;
import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.google.android.material.textfield.TextInputEditText;
import com.google.firebase.messaging.FirebaseMessaging;

import org.json.JSONArray;
import org.json.JSONException;

import java.util.HashMap;
import java.util.Map;

public class Register extends AppCompatActivity {

    Context ctx = this;
    @BindView(R.id.txtemail) TextInputEditText txtemail;
    @BindView(R.id.txtmobile) TextInputEditText txtmobile;
    @BindView(R.id.txtpassword) TextInputEditText txtpassword;
    @BindView(R.id.txtconfirmpassword) TextInputEditText txtconfirmpassword;
    Storage storage;
    private String email,password,mobile,ConfirmPassword;


    @Optional
    @OnClick(R.id.btnregister) void OnClick(View v){

        boolean isValid = ValidateInput();
        if(isValid==true)
        {
            //Call web service using Volley Library
            SendRequest();
        }
    }

    private void SendRequest() {

        String WebServiceUrl = Common.getWebServiceUrl() + "register.php";

        StringRequest request = new StringRequest(StringRequest.Method.POST,
                WebServiceUrl, new Response.Listener<String>() {
            @Override
            public void onResponse(String res)
            {
                // This is call back method and will execute if server returns response. Response may contain error.
                log.d(res);   // response from server will be printed in logcat window.
                //convert response into json format
                try
                {
                    JSONArray response = new JSONArray(res);
                    //[{"error":"no"},{"message":"registration successfull"}]  -- here first JSON object(index 0) is {"error":"no"} and second JSON object(index 1) is {"message":"registration successfull"}.
                    //[{"error":"duplicate email and or mobile"}]
                    String error = response.getJSONObject(0).getString("error");  // here response is an array.
                    if(error.equals("no")==false)
                    {
                        Toast.makeText(ctx,error,Toast.LENGTH_LONG).show();
                    }
                    else
                    {
                        String message = response.getJSONObject(1).getString("message");
                        Toast.makeText(ctx,message,Toast.LENGTH_LONG).show();
                        storage.write("id",-1); //registered successfully. -1 will be stored at storage class. Also an id is generated by system under id column of customer table.
                        Intent SwitchIntent = new Intent(ctx,Login.class);
                        startActivity(SwitchIntent);
                        finish(); //prevent app opening register activity when user press back
                    }
                }
                catch (JSONException e) {
                    log.e(e.getMessage(),ctx);   //If android will not be able to convert response into JSON format, then runtime exception error msg
                    // will be printed in logcat window as wel as Toast.(as per out log.e method in log.java class).
                }
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error)
            {
                //this method is call back which will execute if server do not respond according to our retry policy.
                AlertDialog.Builder b1 = new AlertDialog.Builder(ctx);
                b1.setTitle("Network error");
                b1.setMessage(Common.getMessage());
                b1.setIcon(R.mipmap.ic_launcher);
                b1.setPositiveButton("retry", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        SendRequest();
                    }
                });

                b1.setNegativeButton("cancel", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        b1.create().dismiss();
                    }
                });

                b1.create().show();
            }
        })
        {
            @Override
            // below method is used to send the input parameters to server when StringRequest class & POST method is used to send the request.
            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String,String> KeyValuePair = new HashMap<String,String>();
                //input:email,password,mobile,regid (required)
                KeyValuePair.put("email",email);
                KeyValuePair.put("password",password);
                KeyValuePair.put("mobile",mobile);
                KeyValuePair.put("regid",storage.read("regid",Storage.STRING).toString());
                return KeyValuePair;
            }
        };

        request.setRetryPolicy(Common.getRetryPolicy());

        //addToRequestQueue() actually send request on server
        AppController.getInstance().addToRequestQueue(request);
    }
    private boolean ValidateInput() {

        email = txtemail.getText().toString().trim();
        password = txtpassword.getText().toString().trim();
        mobile = txtmobile.getText().toString().trim();
        ConfirmPassword = txtconfirmpassword.getText().toString();
        boolean isValid = true;
        if(email.length()==0) //email is blank
        {
            isValid = false;
            txtemail.setError("email is required");
        }
        if(password.length()==0)
        {
            isValid = false;
            txtpassword.setError("password is required");
        }
        if(ConfirmPassword.length()==0)
        {
            isValid = false;
            txtconfirmpassword.setError("confirm password is required");
        }
        if(mobile.length()<10)
        {
            isValid = false;
            txtmobile.setError("mobile is required and must be at least 10 digit long");
        }
        if(password.equals(ConfirmPassword)==false)
        {
            isValid = false;
            Toast.makeText(ctx,"Password and Confirm password must be same",Toast.LENGTH_LONG).show();
        }

        return isValid;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);
        getSupportActionBar().hide(); //hide actionbar
        ButterKnife.bind(this);
        storage = new Storage(ctx);
        CheckRegisterLoginStatus();
        log.d("On create method is called");
        subscribeToFireBaseTopics();
    }

    private void subscribeToFireBaseTopics() {
        FirebaseMessaging.getInstance().subscribeToTopic("sale");
        FirebaseMessaging.getInstance().subscribeToTopic("order");
        FirebaseMessaging.getInstance().subscribeToTopic("payment");
        FirebaseMessaging.getInstance().subscribeToTopic("general");
        FirebaseMessaging.getInstance().subscribeToTopic("global");
    }

    private void CheckRegisterLoginStatus() {
        int id = Integer.parseInt(storage.read("id",Storage.INTEGER).toString());  // read() method returns object. So by toString,
        // we converted this object into variable. Then we converted it into integer.
        if(id==-1) //user has already register
        {
            Intent SwitchIntent = new Intent(ctx,Login.class);
            startActivity(SwitchIntent);
            finish();
        }
        else if(id>=1) //user has already Logged in
        {
            Intent SwitchIntent = new Intent(ctx,DashBoard.class);
            startActivity(SwitchIntent);
            finish();
        }

    }
}
